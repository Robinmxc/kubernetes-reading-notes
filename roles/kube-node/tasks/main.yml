- name: 获取node加入变量
  block: 
    - name: 获取kubeadm的token
      shell: "kubeadm token create"
      delegate_to: "{{ groups.deploy[0] }}"
      run_once: true        
      register: kubeadm_token
    
    - name: 获取kubeadm的token_ca_cert_hash
      shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
      delegate_to: "{{ groups.deploy[0] }}"
      register: kubeadm_token_ca_cert_hash
      run_once: true        

    - name: 获取kubeadm的certs
      shell: "kubeadm init phase upload-certs --upload-certs | sed -n '/Using certificate key:/{n;p}'"
      delegate_to: "{{ groups.deploy[0] }}"
      register: kubeadm_certificate_key
      run_once: true      
- name: 部署node节点
  when: "inventory_hostname != groups.deploy[0]"
  block: 
    - name: 开机启用kubelet 服务
      shell: systemctl enable kubelet
      ignore_errors: true
    - name: 修改kubelet对应的cgroupDriver
      shell: "grep cgroup-driver=cgroupfs /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf >> /dev/null; \
              if [ $? -ne 0 ]; \
              then sed -i \"s#--kubeconfig=/etc/kubernetes/kubelet.conf#--kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=cgroupfs#g\" /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf; \
              fi;"
      tags: upgrade_k8s
    
    # 【可选】推送离线docker 镜像，可以忽略执行错误
    - name: 尝试推送离线docker 镜像（若执行失败，可忽略）
      copy: src={{ base_dir }}/down/{{ item }} dest=/opt/kube/images/{{ item }}
      with_items:
      - "{{ kube_proxy }}"
      - "{{ pause }}"
      - "{{ coredns }}"
    - name: 加载kubernetes镜像包
      shell: "docker load -i /opt/kube/images/{{ item }}"
      with_items:
      - "{{ kube_proxy }}"
      - "{{ pause }}"
      - "{{ coredns }}"       
      
    - name: node节点加入集群
      shell: "kubeadm join {{ KUBE_MASTER_VIP }}:6443 --token {{ kubeadm_token.stdout_lines[0] }} --discovery-token-ca-cert-hash sha256:{{ kubeadm_token_ca_cert_hash.stdout_lines[0] }}"
      tags: upgrade_k8s
      when: "inventory_hostname not in groups.kube_master"

    - name: node节点加入master节点集群
      shell: 'kubeadm join {{ KUBE_MASTER_VIP }}:6443 --token {{ kubeadm_token.stdout_lines[0] }} --discovery-token-ca-cert-hash sha256:{{ kubeadm_token_ca_cert_hash.stdout_lines[0] }} --control-plane --certificate-key {{kubeadm_certificate_key.stdout}}'
      tags: upgrade_k8s
      when: "inventory_hostname in groups.kube_master"

    # 批准 node 节点，首先轮询等待kubelet启动完成
    - name: 轮询等待kubelet启动
      shell: "systemctl status kubelet.service|grep Active"
      register: kubelet_status
      until: '"running" in kubelet_status.stdout'
      retries: 8
      delay: 2
    
    #- name: 获取csr 请求信息
    #  shell: "sleep 3 && kubectl get csr"
    #  delegate_to: "{{ groups.deploy[0] }}"
    #  register: csr_info
    #  run_once: true
    
    #- name: approve-kubelet-csr
    #  shell: "kubectl get csr|grep 'Pending' | awk 'NR>0{print $1}'| \
    #        xargs kubectl certificate approve"
    #  when: '"Pending" in csr_info.stdout'
    #  delegate_to: "{{ groups.deploy[0] }}"
    #  run_once: true
    
    - name: 轮询等待node达到Ready状态
      shell: "kubectl get node {{ inventory_hostname }}|awk 'NR>1{print $2}'"
      register: node_status
      delegate_to: "{{ groups.deploy[0] }}"
      until: node_status.stdout == "Ready" or node_status.stdout == "Ready,SchedulingDisabled"
      retries: 8 
      delay: 8
      tags: upgrade_k8s, restart_node
    
    - name: 设置node节点role
      shell: "kubectl label node {{ inventory_hostname }} kubernetes.io/role=node --overwrite"
      ignore_errors: true
      delegate_to: "{{ groups.deploy[0] }}"

    - name: 修改kubernetes的端口范围
      shell: "grep service-node-port-range /etc/kubernetes/manifests/kube-apiserver.yaml >> /dev/null; \
              if [ $? -ne 0 ]; \
              then sed -i \"s#--allow-privileged=true#--allow-privileged=true\\n    - --service-node-port-range=1-65535#g\" /etc/kubernetes/manifests/kube-apiserver.yaml; \
              fi;"
      tags: upgrade_k8s
      when: 'DEPLOY_MODE == "multi-master" and inventory_hostname in groups.kube_master'

    - name: 重置端口后,轮询等待apiserver处于running状态
      shell: "kubectl get pod -n kube-system | grep 'kube-apiserver' | awk '{print $3}'| sort -u"
      register: pod_status
      until: pod_status.stdout == "Running"
      retries: 15
      delay: 5
      ignore_errors: true
      tags: upgrade_k8s      
      when: 'DEPLOY_MODE == "multi-master" and inventory_hostname in groups.kube_master' 

    - name: 通过kubeadm安装后支持kubelet命令
      shell: 'rm -rf $HOME/.kube; \
              mkdir -p $HOME/.kube; \
              sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config; \
              sudo chown $(id -u):$(id -g) $HOME/.kube/config; \
              export KUBECONFIG=/etc/kubernetes/admin.conf'
      tags: upgrade_k8s