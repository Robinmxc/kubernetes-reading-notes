- name: 修改kubelet对应的cgroupDriver
  shell: "grep cgroup-driver=cgroupfs /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf >> /dev/null; \
          if [ $? -ne 0 ]; \
          then sed -i \"s#--kubeconfig=/etc/kubernetes/kubelet.conf#--kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=cgroupfs#g\" /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf; \
          fi;"
  tags: upgrade_k8s

# 【可选】推送离线docker 镜像，可以忽略执行错误
- name: 尝试推送离线docker 镜像（若执行失败，可忽略）
  copy: src={{ base_dir }}/down/{{ item }} dest=/opt/kube/images/{{ item }}
  with_items:
  - "{{ kube_proxy }}"
  - "{{ pause }}"

- name: 加载kubernetes镜像包
  shell: "docker load -i /opt/kube/images/{{ item }}"
  with_items:
  - "{{ kube_proxy }}"
  - "{{ pause }}"

- name: 获取kubeadm的token
  shell: "kubeadm token create"
  delegate_to: "{{ groups.deploy[0] }}"
  register: kubeadm_token

- name: 获取kubeadm的token_ca_cert_hash
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  delegate_to: "{{ groups.deploy[0] }}"
  register: kubeadm_token_ca_cert_hash

- name: 重置kubeadm
  shell: 'kubeadm reset -f'
  tags: upgrade_k8s

- name: node节点加入master节点
  shell: "kubeadm join {{ groups.deploy[0] }}:6443 --token {{ kubeadm_token.stdout_lines[0] }} --discovery-token-ca-cert-hash sha256:{{ kubeadm_token_ca_cert_hash.stdout_lines[0] }}"
  tags: upgrade_k8s

# 批准 node 节点，首先轮询等待kubelet启动完成
- name: 轮询等待kubelet启动
  shell: "systemctl status kubelet.service|grep Active"
  register: kubelet_status
  until: '"running" in kubelet_status.stdout'
  retries: 8
  delay: 2

#- name: 获取csr 请求信息
#  shell: "sleep 3 && kubectl get csr"
#  delegate_to: "{{ groups.deploy[0] }}"
#  register: csr_info
#  run_once: true

#- name: approve-kubelet-csr
#  shell: "kubectl get csr|grep 'Pending' | awk 'NR>0{print $1}'| \
#        xargs kubectl certificate approve"
#  when: '"Pending" in csr_info.stdout'
#  delegate_to: "{{ groups.deploy[0] }}"
#  run_once: true

- name: 轮询等待node达到Ready状态
  shell: "kubectl get node {{ inventory_hostname }}|awk 'NR>1{print $2}'"
  register: node_status
  delegate_to: "{{ groups.deploy[0] }}"
  until: node_status.stdout == "Ready" or node_status.stdout == "Ready,SchedulingDisabled"
  retries: 8 
  delay: 8
  tags: upgrade_k8s, restart_node

- name: 设置node节点role
  shell: "kubectl label node {{ inventory_hostname }} kubernetes.io/role=node --overwrite"
  ignore_errors: true
  delegate_to: "{{ groups.deploy[0] }}"