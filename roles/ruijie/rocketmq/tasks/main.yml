- block:
  - name: 获取数据存储路径状态
    stat: path="{{ rocketmq_data_dir }}"
    register: data_dir_stat

  - name: 检查数据存储路径是否存在
    fail: msg="数据存储目录{{ rocketmq_data_dir }}不存在"
    when: 'rocketmq_check_data_dir == "yes" and not data_dir_stat.stat.exists'

  - name: 获取日志存储路径状态
    stat: path="{{ rocketmq_logs_dir }}"
    register: data_dir_stat

  - name: 检查日志存储路径是否存在
    fail: msg="日志存储目录{{ rocketmq_logs_dir }}不存在"
    when: 'not data_dir_stat.stat.exists'
  when: 'rocketmq_check_data_dir == "yes"'
  tags:
  - config

- name: 在deploy节点准备目录
  tags:
  - config
  file: path={{ item }} state=directory
  with_items:
  - "{{ yaml_dir }}/rocketmq"
  run_once: true
  connection: local

- name: 准备RocketMQ的部署文件
  tags:
  - config
  vars:
    rocketmq_node_ip: "{{ groups.rocketmq[0] }}"
    deploy_conf: '{{ mq_deploy_conf }}'
  template: src=rocketmq.yaml.j2 dest={{ yaml_dir }}/rocketmq/rocketmq.yml
  run_once: true
  connection: local

- name: 获取已下载离线镜像信息
  command: "ls {{ base_dir }}/down"
  register: download_info
  connection: local
  run_once: true

- name: 获取所有已经创建的POD信息
  command: "{{ bin_dir }}/kubectl get pod -n {{ APP_NAMESPACE }}"
  register: pod_info
  run_once: true
  connection: local

- block:
    - name: 尝试推送离线RocketMQ镜像（若执行失败，可忽略）
      copy: src={{ base_dir }}/down/{{ rocketmq_offline }} dest=/opt/kube/images/{{ rocketmq_offline }}
      when: 'rocketmq_offline in download_info.stdout'

    - name: 获取RocketMQ离线镜像推送情况
      command: "ls /opt/kube/images"
      register: image_info

    - name: 导入RocketMQ的离线镜像（若执行失败，可忽略）
      shell: "{{ bin_dir }}/docker load -i /opt/kube/images/{{ rocketmq_offline }}"
      when: 'rocketmq_offline in image_info.stdout'

    - name: 部署RocketMQ
      shell: "{{ bin_dir }}/kubectl apply -f {{ yaml_dir }}/rocketmq/rocketmq.yml"
      connection: local
      run_once: true
  when: '"rg-rocket" not in pod_info.stdout'
