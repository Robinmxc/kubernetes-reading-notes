- name: 获取docker安装状态
  shell: 'systemctl status docker|grep Active'
  register: install_info

- name: 安装docker
  when: "'running' not in install_info.stdout"
  block:
    - name: 准备docker相关目录
      file: name={{ item }} state=directory
      with_items:
      - "{{ bin_dir }}"
      - /etc/docker
    
    - name: 复制Docker相关文件
      copy: src={{ base_dir }}/bin/{{ item }} dest={{ bin_dir }}/{{ item }} mode=0755
      with_items:
      - containerd
      - containerd-shim
      - docker-init
      - runc
      - docker
      - ctr
      - dockerd
      - docker-proxy

    - name: docker命令自动补全
      copy: src=docker dest=/etc/bash_completion.d/docker mode=0644
    
    - name: docker国内镜像加速
      template: src=daemon.json.j2 dest=/etc/docker/daemon.json
    
    - name: flush-iptables
      shell: "iptables -P INPUT ACCEPT \
            && iptables -F && iptables -X \
            && iptables -F -t nat && iptables -X -t nat \
            && iptables -F -t raw && iptables -X -t raw \
            && iptables -F -t mangle && iptables -X -t mangle"
    
    - name: 创建docker的systemd unit文件
      template: src=docker.service.j2 dest=/etc/systemd/system/docker.service
      tags: upgrade_docker, download_docker
    
    - name: 开机启用docker 服务
      shell: systemctl enable docker
      ignore_errors: true
    
    - name: 开启docker 服务
      shell: systemctl daemon-reload && systemctl restart docker
      tags: upgrade_docker
    
    ## 可选 ------安装docker查询镜像 tag的小工具----
    # 先要安装轻量JSON处理程序‘jq’，已在 prepare 节点安装
    - name: 下载 docker-tag
      copy: src=docker-tag dest={{ bin_dir }}/docker-tag mode=0755
    
    - name: 轮询等待docker服务运行
      shell: "systemctl status docker.service|grep Active"
      register: docker_status
      until: '"running" in docker_status.stdout'
      retries: 8
      delay: 2
      tags: upgrade_docker

    # 配置 docker 命令软链接，方便单独安装 docker
    - name: 配置 docker 命令软链接
      file: src={{ bin_dir }}/docker dest=/usr/bin/docker state=link
      ignore_errors: true

- name: 获取docker已加载的镜像信息
  shell: "{{ bin_dir }}/docker images --format ''{{ '{{' }}.Repository{{ '}}' }}:{{ '{{' }}.Tag{{ '}}' }}''"
  register: imgages_info

- name: 加载busybox镜像
  when: '"busybox:" + busybox_version not in imgages_info.stdout'
  block:
  - name: 创建存放镜像的目录
    file: name=/opt/kube/images state=directory

  - name: 复制busybox镜像文件
    vars:
      dest_file: "/opt/kube/images/{{ busybox_offline }}"
    copy: src={{ base_dir }}/down/{{ busybox_offline }} dest={{ dest_file }}
    when: 'dest_file is not exists'

  - name: 导入busybox
    shell: "{{ bin_dir }}/docker load -i /opt/kube/images/{{ busybox_offline }}"
