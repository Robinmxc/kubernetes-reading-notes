- block:
    - name: 在deploy 节点创建相关目录
      file: name=/opt/kube/kube-system/flannel state=directory

    - name: 配置 flannel DaemonSet yaml文件
      template: src=kube-flannel.yaml.j2 dest=/opt/kube/kube-system/flannel/kube-flannel.yaml
  delegate_to: "{{ groups.deploy[0] }}"
  run_once: true

- name: 检查是否已下载离线flannel镜像
  command: "ls {{ base_dir }}/down"
  register: download_info
  connection: local
  run_once: true

- name: 创建flannel cni 相关目录
  file: name={{ item }} state=directory
  with_items:
  - /opt/kube/images

# 【可选】推送离线docker 镜像，可以忽略执行错误
- name: 尝试推送离线docker 镜像（若执行失败，可忽略）
  copy: src={{ base_dir }}/down/{{ item }} dest=/opt/kube/images/{{ item }}
  when: 'item in download_info.stdout'
  with_items:
  - "{{ flannel_offline }}"
  - "{{ flannel_cni_offline }}"
  ignore_errors: true

# 导入flannel的离线镜像
- name: 导入flannel的离线镜像（若执行失败，可忽略）
  shell: "docker load -i /opt/kube/images/{{ item }}"
  with_items:
  - "{{ flannel_offline }}"
  - "{{ flannel_cni_offline }}"
  ignore_errors: true

# 只需单节点执行一次
- name: 运行 flannel网络
  shell: "kubectl apply -f /opt/kube/kube-system/flannel/ && sleep 5"
  delegate_to: "{{ groups.deploy[0] }}"
  run_once: true
  retries: 15
  delay: 8
  
# 等待网络插件部署成功，视下载镜像速度而定
- name: 轮询等待flannel 运行，视下载镜像速度而定
  shell: "kubectl get pod -n kube-system -o wide|grep 'flannel'|grep ' {{ groups.deploy[0] }} '|awk '{print $3}'"
  register: pod_status
  until: pod_status.stdout == "Running"
  delegate_to: "{{ groups.deploy[0] }}"
  retries: 15
  delay: 8


