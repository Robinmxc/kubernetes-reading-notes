apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-https
  namespace: ruijie-smpplus
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    #nginx.ingress.kubernetes.io/app-root: /admin/
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/admin$ /admin/;
      rewrite ^/self$ /self/;
      rewrite ^/mn$ /self/mn;
      rewrite ^/entry/(.*)$ /portal/entry/$1;
      rewrite ^/access/(.*)$ /portal/access/$1;
      rewrite ^/api/linkid/(.*)$ /linkid/$1;
{% if 'https' == ingress_mode %}
    nginx.ingress.kubernetes.io/server-snippet: |
      rewrite ^/portal/leap(/|$)(.*)$ http://123.123.123.123$1$2;
{% endif %}
spec:
  ingressClassName: nginx
{% if 'https' == ingress_mode %}
  tls:
  - hosts:
    - '*.{{ ingress_ssl_names[0] }}'
    secretName: nginx-cert
{% endif %}
  rules:
  - host: {{ KUBE_MASTER_VIP }}.nip.io
    http: &http_rules
      paths:
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: rg-frontend-smp
            port:
              number: 8088
      - path: /portal
        pathType: Prefix
        # 访客认证页面
        backend:
          service:
            name: rg-frontend-portal
            port:
              number: 81
      - path: /entry
        pathType: Prefix
        # 现访客认证页面
        backend:
          service:
            name: rg-frontend-portal
            port:
              number: 81
      - path: /access
        pathType: Prefix
        # 现访客认证页面
        backend:
          service:
            name: rg-frontend-portal
            port:
              number: 81
      - path: /eportal
        pathType: Prefix
        # 添加设备使用
        backend:
          service:
            name: rg-eportal
            port:
              number: 8090
      - path: /component
        pathType: Prefix
        # 对应界面菜单项用户管理>用户管理
        backend:
          service:
            name: rg-component
            port:
              number: 8086
      - path: /api/aggregation
        pathType: Prefix
        backend:
          service:
            name: rg-aggregation
            port:
              number: 9999
      - path: /maintenance
        pathType: Prefix
        backend:
          service:
            name: rg-operations
            port:
              number: 10000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: rg-operations
            port:
              number: 10000
      - path: /linkid
        pathType: Prefix
        backend:
          service:
            name: rg-linkid
            port:
              number: 8901
      - path: /nodeManager/file/download
        pathType: Prefix
        backend:
          service:
            name: rg-authentication
            port:
              number: 9888
      - path: /nodeManager/nodeInfoCommit/fromAD
        pathType: Prefix
        backend:
          service:
            name: rg-authentication
            port:
              number: 9888
      - path: /radiusSession/onlineUser/getExportLinkedOnlineUsers
        pathType: Prefix
        backend:
          service:
            name: rg-authentication
            port:
              number: 9888
      - path: /nodeManager/etlUserInfoSync
        pathType: Prefix
        backend:
          service:
            name: rg-authentication
            port:
              number: 9888
      - path: /nodeManager/nodeidentify
        pathType: Prefix
        backend:
          service:
            name: rg-authentication
            port:
              number: 9888
      - path: /nodeidentify
        pathType: Prefix
        backend:
          service:
            name: rg-nodeidentify
            port:
              number: 8001
      - path: /manualbank
        pathType: Prefix
        backend:
          service:
            name: rg-nodeidentify
            port:
              number: 8001
      - path: /self
        pathType: Prefix
        backend:
          service:
            name: rg-frontend-client
            port:
              number: 3000
      - path: /mn
        pathType: Prefix
        backend:
          service:
            name: rg-frontend-client
            port:
              number: 3000
      - path: /log
        pathType: Prefix
        backend:
          service:
            name: rg-log
            port:
              number: 80
{% if ESCAPE["enable"] %}
  - host: {{ ESCAPE.VIP }}.nip.io
    http: *http_rules
{% endif %}
{% if '' != SMPPLUS_SSO_DOMAIN %}
  - host: {{ SMPPLUS_SSO_DOMAIN }}
    http: *http_rules
{% endif %}
{% if '' != SMPPLUS_PORTAL_DOMAIN %}
  - host: {{ SMPPLUS_PORTAL_DOMAIN }}
    http: *http_rules
{% endif %}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-license
  namespace: ruijie-smpplus
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
{% if 'https' == ingress_mode %}
  tls:
  - hosts:
    - '*.{{ ingress_ssl_names[0] }}'
    secretName: nginx-cert
{% endif %}
  rules:
  - host: {{ KUBE_MASTER_VIP }}.nip.io
    http: &http_rules
      paths:
      - path: /api/license(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: rg-license
            port:
              number: 8089
{% if ESCAPE["enable"] %}
  - host: {{ ESCAPE.VIP }}.nip.io
    http: *http_rules
{% endif %}              
{% if '' != SMPPLUS_SSO_DOMAIN %}
  - host: {{ SMPPLUS_SSO_DOMAIN }}
    http: *http_rules
{% endif %}
{% if '' != SMPPLUS_PORTAL_DOMAIN %}
  - host: {{ SMPPLUS_PORTAL_DOMAIN }}
    http: *http_rules
{% endif %}
