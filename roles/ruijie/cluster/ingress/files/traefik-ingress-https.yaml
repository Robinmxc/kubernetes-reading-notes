kind: DaemonSet
apiVersion: apps/v1
metadata:
  namespace: kube-system
  name: traefik
  labels:
    k8s-app: traefik-ingress

spec:
  selector:
    matchLabels:
      k8s-app: traefik-ingress
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress
    spec:
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      restartPolicy: Always
      serviceAccountName: ingress-sa
      containers:
      - image: traefik:v2.3.0
        name: traefik-ingress
        volumeMounts:
        - mountPath: "/ssl"
          name: "ssl"
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: admin
          containerPort: 8580
          hostPort: 8580
        args:
        - --accesslog
        - --entrypoints.web.address=:80
        - --entrypoints.websecure.address=:443
        - --entrypoints.traefik.Address=:8580
        - --entrypoints.web.http.redirections.entrypoint.to=websecure
        - --entrypoints.web.http.redirections.entrypoint.scheme=https
        - --providers.kubernetescrd
        - --api
        - --api.dashboard=true
        - --api.insecure=true
        - --metrics.prometheus=true
        - --log.level=INFO
      volumes:
      - name: ssl
        secret:
          secretName: traefik-cert
      nodeSelector:
        edgenode: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress
  namespace: kube-system
  annotations:
    prometheus.io/port: "8580"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: traefik-ingress
spec:
  selector:
    k8s-app: traefik-ingress
  ports:
  - name: http
    port: 80
    protocol: TCP
  - name: https
    containerPort: 443
    hostPort: 443
  - name: admin
    port: 8580
    protocol: TCP

---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: ruijie-sourceid

spec:
  defaultCertificate:
    secretName: traefik-cert
---