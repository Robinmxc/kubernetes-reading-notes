- name: 获取已下载离线镜像信息
  command: "ls {{ base_dir }}/down"
  register: download_info
  connection: local
  run_once: true

- name: 获取所有已经创建的POD信息
  command: "kubectl get pod --all-namespaces"
  register: pod_info
  run_once: true
  delegate_to: "{{ groups.deploy[0] }}"

# 现阶段 dashboard 获取metrics仍旧依赖于heapster，因此需连带安装heapster
- block:
    - name: 尝试推送离线 dashboard镜像（若执行失败，可忽略）
      copy: src={{ base_dir }}/down/{{ dashboard_offline }} dest=/opt/kube/images/{{ dashboard_offline }}
      when: 'dashboard_offline in download_info.stdout'

    - name: 尝试推送离线 metrics-scraper镜像（若执行失败，可忽略）
      copy: src={{ base_dir }}/down/{{ metrics_scraper_offline }} dest=/opt/kube/images/{{ metrics_scraper_offline }}
      when: 'metrics_scraper_offline in download_info.stdout'

    - name: 获取dashboard离线镜像推送情况
      command: "ls /opt/kube/images"
      register: image_info

    - name: 导入 dashboard的离线镜像（若执行失败，可忽略）
      shell: "docker load -i /opt/kube/images/{{ dashboard_offline }}"
      when: 'dashboard_offline in image_info.stdout'

    - name: 导入 metrics-scraper的离线镜像（若执行失败，可忽略）
      shell: "docker load -i /opt/kube/images/{{ metrics_scraper_offline }}"
      when: 'metrics_scraper_offline in image_info.stdout'  

    - name: 创建 dashboard自签证书
      shell: "kubectl create secret generic kubernetes-dashboard-certs --from-file=/etc/kubernetes/pki/apiserver.key \
      --from-file=/etc/kubernetes/pki/apiserver.crt -n kube-system"
      delegate_to: "{{ groups.deploy[0] }}"
      run_once: true

    - name: 创建 dashboard部署
      shell: "kubectl apply -f {{ base_dir }}/manifests/ruijie/dashboard/2.5.1"
      delegate_to: "{{ groups.deploy[0] }}"
      run_once: true
  when: '"kubernetes-dashboard" not in pod_info.stdout and dashboard_install == "yes"'
  ignore_errors: true
