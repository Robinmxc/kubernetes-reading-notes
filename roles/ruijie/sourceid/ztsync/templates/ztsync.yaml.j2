apiVersion: apps/v1
kind: Deployment
metadata:
  name: rg-ztsync
  namespace: {{ APP_NAMESPACE }}
  labels:
    k8s-app: rg-ztsync
spec:
  replicas: {{ deploy_conf.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      k8s-app: rg-ztsync
  template:
    metadata:
      labels:
        k8s-app: rg-ztsync
    spec:
      containers:
      - name: rg-ztsync
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS['ztsync'].name }}:{{ SOURCEID_DOCKERS['ztsync'].version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: JAVA_OPT_EXT
          value: "{{ ztsync_java_opt }}"
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 8903
        volumeMounts:
        - mountPath: /ruijie/sourceid/ztsync/conf
          name: conf
        - mountPath: /logs
          name: logpath
        - mountPath: /ruijie/sourceid/ztsync/excel
          name: excel

{%if HEALTH_CHECK["enable"]  and (HEALTH_CHECK["ztsync"] is not defined or HEALTH_CHECK["ztsync"]) %}
        startupProbe:
          failureThreshold: 20
          httpGet:
            path: /sync/liveProbe
            port: 8903
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1

        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /sync/liveProbe
            port: 8903
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
          
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /sync/liveProbe
            port: 8903
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
{% endif %}

      imagePullSecrets:
      - name: regsecret
      volumes:
        - name: conf
          hostPath:
            path: {{ config_base_dir }}/sourceid/ztsync/conf
        - name: logpath
          hostPath:
            path: {{ config_base_dir }}/logs
        - name: excel
          hostPath:
            path: {{ config_base_dir }}/sourceid/ztsync/excel
---
apiVersion: v1
kind: Service
metadata:
  name: rg-ztsync
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: rg-ztsync
  ports:
  - port: 80
    targetPort: 8903

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: rg-ztsync-ingress
  namespace: {{ APP_NAMESPACE }}
spec:
 ingressClassName: nginx
{% if 'https' == ingress_mode %}
  tls:
    - hosts:
      - {{ SOURCEID_GATE_DOMAIN }}
      secretName: nginx-cert
{% endif %}
  rules:
    - host: {{ SOURCEID_GATE_DOMAIN }}
      http:
        paths:
        - path: /sync
          pathType: Prefix
          backend:
            service:
              name: rg-ztsync
              port:
                number: 80                  
