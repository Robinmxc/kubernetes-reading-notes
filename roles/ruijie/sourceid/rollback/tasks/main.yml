- block:
  - name: 获取所有已经创建的POD信息
    tags: always
    command: "kubectl get pod -n {{ APP_NAMESPACE }}"
    register: pod_info
    
  - name: 部署第1个mongodb
    shell: "kubectl apply -f {{ yaml_dir }}/mongo/mongo1.yml"
    when: '"mongo1" not in pod_info.stdout'
    connection: local

  - name: 部署第2个mongodb
    shell: "kubectl apply -f {{ yaml_dir }}/mongo/mongo2.yml"
    connection: local
    when: '"mongo2" not in pod_info.stdout and mongodb_deploy_mode == "3"'
    
  - name: 部署第3个mongodb
    shell: "kubectl apply -f {{ yaml_dir }}/mongo/mongo3.yml"
    connection: local
    when: '"mongo3" not in pod_info.stdout and mongodb_deploy_mode == "3"'

  - name: 暂停30秒等待mongo启动完成
    wait_for: timeout=30
    when: '"mongo1" not in pod_info.stdout'

  - name: 获取mongo1 POD 名称
    shell: "kubectl get pod -n {{ APP_NAMESPACE }} -o custom-columns=NAME:.metadata.name | grep mongo1"
    register: shell_result
    connection: local
    
  - name: 设置mongo shell
    set_fact:
      mongo_pod_name: "{{ shell_result.stdout }}"
      mongo_pod_shell: "kubectl exec -n {{ APP_NAMESPACE }} {{ shell_result.stdout }} -- "
      mongo_shell: "kubectl exec -n {{ APP_NAMESPACE }} {{ shell_result.stdout }} -- mongo {{ mongo_auth_param }}"
    connection: local

  - name: 尝试查询复制集状态
    shell: "{{ mongo_pod_shell }} mongo --quiet --eval 'rs.status()'"
    register: rs_status
    connection: local
    when: '"mongo1" not in pod_info.stdout'

  - name: drop mongo中所有数据库
    vars:
      comp_name: "{{ item }}"
      db_name: "{{ DB_VERSION[comp_name].name }}"
    shell: '{{ mongo_shell }}  --eval ''db.getSiblingDB("{{ db_name }}").dropDatabase()'''
    with_items: "{{ DB_VERSION }}" 
    connection: local

  - name: drop mongo中mdm和carrer数据库
    vars:
      db_name: "{{ item }}"
    shell: '{{ mongo_shell }}  --eval ''db.getSiblingDB("{{ db_name }}").dropDatabase()'''
    with_items: 
    - "mdm"
    - "career-event"
    - "internet-id"
    connection: local

  - name: 恢复 mongodb备份数据
    shell: "mongorestore -h {{ groups.mongodb[0] }} -u {{ MONGODB_ADMIN_USER }} -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase 'admin' --drop {{BAK_DIR}}/mongodbbak"
    register: restore_result
    connection: local

  when: 'inventory_hostname == groups.kube_master[0]'
