apiVersion: apps/v1
kind: Deployment
metadata:
  name: rg-frontend
  namespace: {{ APP_NAMESPACE }}
  labels:
    k8s-app: rg-frontend
spec:
  replicas: {{ deploy_conf.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      k8s-app: rg-frontend
  template:
    metadata:
      labels:
        k8s-app: rg-frontend
    spec:
      imagePullSecrets:
      - name: regsecret
      volumes:
        - name: conf
          hostPath:
            path: {{ config_base_dir }}/sourceid/frontend/deploy/domain/domain.json
      containers:
      - name: rg-frontend
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS.frontend.name }}:{{ SOURCEID_DOCKERS.frontend.version }}
        imagePullPolicy: IfNotPresent
        env:
          - name: SELF_SUFFIX
            value: {{ SELF_SUFFIX }}
          - name: SSO_PREFIX
            value: {{ CAS_SUFFIX }}
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 8081
        volumeMounts:
        - mountPath: /usr/share/nginx/html/public/deploy/domain/domain.json
          name: conf

---
apiVersion: v1
kind: Service
metadata:
  name: rg-frontend
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: rg-frontend
  ports:
  - port: 80
    targetPort: 8081
