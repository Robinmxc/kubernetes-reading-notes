- name: 安装unzip
  yum:
    name:
      - unzip
    state: present
    use_backend: yum

- name: 读取目录状态
  stat: path="{{ KAD_PACKAGE_DIR }}"
  register: pkg_dir_stat

- name: 读取安装包状态
  stat: path="{{ kad_package_file }}"
  register: pkg_stat
  when: 'not pkg_dir_stat.stat.exists'

- name: 下载安装包
  when: 'not pkg_dir_stat.stat.exists and not pkg_stat.stat.exists'
  get_url:
    url: "{{ KAD_FILES_REPO }}/sourceid/kad/{{ KAD_PACKAGE_NAME }}.zip"
    dest: "{{ base_dir }}/down/"

- name: 解压
  when: 'not pkg_dir_stat.stat.exists'
  block:
  - name: 创建解压目录
    file: path="{{ KAD_PACKAGE_DIR }}" state=directory
  - name: 解压SourceID安装包
    unarchive:
      src: "{{ kad_package_file }}"
      dest: "{{ KAD_PACKAGE_DIR }}"

- name: 读取镜像包下载标识
  stat: path="{{ download_flag_file }}"
  register: image_pkg_stat
  when: '"yes" != PRIVATE_REGISTRY_ENABLED'

- name: 读取镜像包状态
  stat: path="{{ images_tgz_file }}"
  register: tgz_info
  when: '"yes" != PRIVATE_REGISTRY_ENABLED'

- name: 下载镜像包
  get_url:
    url: "{{ KAD_FILES_REPO }}/sourceid/images/sourceid-images-{{ KAD_APP_VERSION }}.tar.gz"
    dest: "{{ base_dir }}/down/"
  when: '"yes" != PRIVATE_REGISTRY_ENABLED and not image_pkg_stat.stat.exists and not tgz_info.stat.exists'

- name: 读取镜像包状态
  stat: path="{{ images_tgz_file }}"
  register: tgz_info
  when: '"yes" != PRIVATE_REGISTRY_ENABLED'

- name: 解压
  when: '"yes" != PRIVATE_REGISTRY_ENABLED and tgz_info.stat.exists'
  block:
  - name: 设置下载标识
    file:
      path: "{{ download_flag_file }}"
      state: touch
  - name: 解压安装包
    unarchive:
      src: "{{ images_tgz_file }}"
      dest: "{{ base_dir }}/down/"
  - name: 删除压缩包
    file:
      path: "{{ images_tgz_file }}"
      state: absent
