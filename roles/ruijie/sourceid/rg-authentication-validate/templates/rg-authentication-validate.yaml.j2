apiVersion: apps/v1
kind: Deployment
metadata:
  name: rg-authentication-validate
  namespace: {{ APP_NAMESPACE }}
  labels:
    k8s-app: rg-authentication-validate
spec:
  replicas: {{ deploy_conf.replicas }}
  selector:
    matchLabels:
      k8s-app: rg-authentication-validate
  template:
    metadata:
      labels:
        k8s-app: rg-authentication-validate
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: rg-auth-extend
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS["auth-extend"].name }}:{{ SOURCEID_DOCKERS["auth-extend"].version }}
        imagePullPolicy: IfNotPresent
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 8888
        volumeMounts:
        - mountPath: /ruijie/auth-extend/conf
          name: ae-conf
        - mountPath: /logs
          name: ae-logpath
        - mountPath: /skywalking/agent
          name: ae-agent
      - name: rg-ess
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS["ess"].name }}:{{ SOURCEID_DOCKERS["ess"].version }}
        imagePullPolicy: IfNotPresent
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 8080
        - containerPort: 1099
        volumeMounts:
        - mountPath: /opt/ess/log
          name: ess-conf
        env:
        - name: PGSQL_ADDRESS
          value: jdbc:postgresql://postgresql:5432/
        - name: PGSQL_DB_NAME
          value: essdb
        - name: PGSQL_USERNAME
          value: postgres
        - name: PGSQL_PASSWORD
          value: {{ PGSQL_ADMIN_PWD }}
        - name: ESS_PORT_80_REL
          value: "{{ var_conf.ess_port_80_rel }}"
        - name: ESS_PORT_8080_REL
          value: "{{ var_conf.ess_port_8080_rel }}"
        - name: ESS_PORT_443_REL
          value: "{{ var_conf.ess_port_443_rel }}"
        - name: ESS_PORT_8443_REL
          value: "{{ var_conf.ess_port_8443_rel }}"
        - name: integrate_run
          value: "{{ var_conf.integrate_run }}"
        - name: TERM
          value: {{ var_conf.term }}
        - name: scene
          value: {{ var_conf.scene }}
        - name: VIP
          value: {{ KUBE_NODE_HOSTS[0] }}

      imagePullSecrets:
      - name: regsecret
      volumes:
        - name: ae-conf
          hostPath:
            path: {{ config_base_dir }}/sourceid/auth-extend/conf
        - name: ae-logpath
          hostPath:
            path: {{ config_base_dir }}/logs
        - name: ae-agent
          emptyDir: {}
        - name: ess-conf
          hostPath:
            path: {{ config_base_dir }}/logs/ess


---
apiVersion: v1
kind: Service
metadata:
  name: rg-authentication-validate
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: rg-authentication-validate
  ports:
  - port: 80
    name: rg-auth-extend
    targetPort: 8888
  - port: 8080
    name: rg-ess
    targetPort: 8080
  - port: 1099
    name: rg-ess-1099
    targetPort: 1099
