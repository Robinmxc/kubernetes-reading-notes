apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rg-sso
  namespace: {{ APP_NAMESPACE }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: rg-sso
    spec:
{% if "dev" == SOURCEID_DEPLOY_PROFILE %}
      hostAliases:
      - ip: "{{ groups['kube-node'][0] }}"
        hostnames:
        - "{{ SOURCEID_SSO_DOMAIN }}"
{% endif %}
      containers:
      - name: rg-sso
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_COMPONENTS.sso.docker_name }}:{{ SOURCEID_COMPONENTS.sso.version }}
        env:
        - name: JAVA_OPT_EXT
          value: "{{ sso_java_opt }}"
        imagePullPolicy: IfNotPresent
{% if "yes" == sso_resource_limit %}
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 1
            memory: 3Gi
{% endif %}
        ports:
        - containerPort: 80
        volumeMounts:
            - mountPath: /etc/cas
              name: etc
            - mountPath: /build
              name: build
            - mountPath: /cas
              name: cas
            - mountPath: /ruijie/sourceid/sso/conf
              name: conf
      imagePullSecrets:
      - name: regsecret
      volumes:
        - emptyDir: {}
          name: etc
        - emptyDir: {}
          name: build
        - emptyDir: {}
          name: cas
        - name: conf
          hostPath:
            path: {{ config_base_dir }}/sourceid/sso/conf

---
apiVersion: v1
kind: Service
metadata:
  name: rg-sso
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    service: rg-sso
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rg-sso-ingress
  namespace: {{ APP_NAMESPACE }}
spec:
  rules:
  - host: {{ SOURCEID_SSO_DOMAIN }}
    http:
      paths:
      - path: /
        backend:
          serviceName: rg-sso
          servicePort: 80

