- name: 部署cleanscript
  when: 'MGOB.MGOB_SFTP_ENABLED == "yes"'
  block:
  - name: 在deploy节点准备目录
    tags:
    - config
    file: path={{ item }} state=directory
    with_items:
    - "{{ yaml_dir }}/mgob"
    run_once: true
    connection: local

  - name: 准备mgob的清理文件
    template: src=cleanmongob.sh.j2 dest={{ yaml_dir }}/mgob/cleanmongob.sh
    run_once: true
    connection: local

  - name: 准备mgob的清理文件
    template: src=copyscript.sh.j2 dest={{ yaml_dir }}/mgob/copyscript.sh
    run_once: true
    connection: local

  - name: 准备mgob的清理文件
    template: src=cronroot.j2 dest={{ yaml_dir }}/mgob/cronroot
    run_once: true
    connection: local

  - name: 执行拷贝脚本
    shell: '/bin/bash {{ yaml_dir }}/mgob/copyscript.sh'
    connection: local
    run_once: true



- name: 部署License
  when: 'MGOB_POD_ENABLE == "yes"'
  block:
  - name: 在deploy节点准备目录
    tags:
    - config
    file: path={{ item }} state=directory
    with_items:
    - "{{ yaml_dir }}/mgob"
    run_once: true
    connection: local

  - name: 准备mgob的部署文件
    tags:
    - config
    vars:
      mgob_node_ip: "{{ groups.mgob[0] }}"
      deploy_conf: '{{ mgob_deploy_conf }}'
    template: src=mgob.yaml.j2 dest={{ yaml_dir }}/mgob/mgob.yml
    run_once: true
    connection: local

  - name: 获取已下载离线镜像信息
    command: "ls {{ base_dir }}/down"
    register: download_info
    connection: local
    run_once: true

  - name: 获取所有已经创建的POD信息
    command: "kubectl get pod -n {{ APP_NAMESPACE }}"
    register: pod_info
    run_once: true
    connection: local

  - name: 部署mgob
    when: '"rg-mgob" not in pod_info.stdout'
    block:
      - name: 复制mgob镜像
        copy: src={{ base_dir }}/down/{{ mgob_offline }} dest=/opt/kube/images/{{ mgob_offline }}
        when: '"allinone" != DEPLOY_MODE and mgob_offline in download_info.stdout'

      - name: 获取docker已加载的镜像信息
        command: "docker images --format ''{{ '{{' }}.Repository{{ '}}' }}:{{ '{{' }}.Tag{{ '}}' }}''"
        register: imgages_info

      - name: 导入mgob的镜像
        when: '"mgob" not in imgages_info.stdout'
        vars:
          img_dir: '{% if "allinone" == DEPLOY_MODE %}{{ img_download_dir }}{% else %}{{ img_copy_dir }}{% endif %}'
        shell: "docker load -i {{ img_dir }}/{{ mgob_offline }}"

      - name: 部署mgob
        shell: "kubectl apply -f {{ yaml_dir }}/mgob/mgob.yml"
        connection: local
        run_once: true
