- name: 部署adapter
  when: 'ADAPTER_ENABLE == "yes"'
  block:
  - name: 复制配置文件
    tags:
      - config
    copy:
      src: "{{ namespace_dir }}/conf/sourceid/adapter/conf/"
      dest: "{{ config_base_dir }}/sourceid/adapter/conf/"

  - name: 单域名配置step1
    tags:
      - config
    lineinfile:
      dest: "{{ config_base_dir }}/sourceid/adapter/conf/application-pro.properties"
      insertafter: 'server.port=80'
      line: 'server.servlet.context-path=/adapter'
    when: 'SOURCEID_DOMAIN_MODE == "single"'

  - name: 单域名配置step2
    tags:
      - config
    replace: path="{{ config_base_dir }}/sourceid/adapter/conf/application-pro.properties" regexp="{{ item.regexp }}" replace="{{ item.replace }}"
    with_items:
      - { regexp: "rg-sso.{{ APP_NAMESPACE }}.svc/api/", replace: "rg-sso.{{ APP_NAMESPACE }}.svc/{{ CAS_SUFFIX }}/api/" }
    no_log: true
    when: 'SOURCEID_DOMAIN_MODE == "single"'

  - name: 配置文件更新
    tags:
      - config
    replace: path="{{ config_base_dir }}/sourceid/adapter/conf/application-pro.properties" regexp="{{ item.regexp }}" replace="{{ item.replace }}"
    with_items:
      - {regexp: "sid.log.mq.ip.*$", replace: "sid.log.mq.ip = {{rocketmq_addr}}"} 
    no_log: true


  - name: 准备部署文件目录
    tags:
      - config
    file: path={{ item }} state=directory
    with_items:
    - "{{ yaml_dir }}/adapter"
    run_once: true
    connection: local

  - name: 准备部署文件
    tags:
      - config
    vars:
      deploy_conf: '{{ adapter_deploy_conf }}'
    template: src='{{ adapter_templates_path }}adapter.yaml.j2' dest={{ yaml_dir }}/adapter/adapter.yml
    run_once: true
    connection: local

  - name: 获取所有已经创建的POD信息
    tags:
      - deploy
    command: "kubectl get pod -n {{ APP_NAMESPACE }}"
    register: pod_info
    run_once: true
    connection: local

  - name: 执行部署
    tags:
      - deploy
    shell: "kubectl apply -f {{ yaml_dir }}/adapter/"
    run_once: true
    connection: local