- name: 部署数据同步组件
  when: 'SOURCEID_DOCKERS.convert is defined and (SOURCEID_DOCKERS.convert.enable is not defined or SOURCEID_DOCKERS.convert.enable)'
  block:
  - name: 复制配置文件
    tags:
      - config
    copy:
      src: "{{ namespace_dir }}/conf/sourceid/convert/conf/"
      dest: "{{ config_base_dir }}/sourceid/convert/conf/"

  - name: 修改配置文件
    tags:
      - config
    replace: path="{{ config_base_dir }}/sourceid/convert/conf/application-dev.yml" regexp="{{ item.regexp }}" replace="{{ item.replace }}"
    with_items:
      - {regexp: "mongodb:.*/linkid-dev.*$", replace: "mongodb://{{ SOURCEID_LINKID_DB_USER }}:{{ SOURCEID_LINKID_DB_PWD }}@{{ mongodb_addr }}/linkid-dev?replicaSet=rs0"}
      - {regexp: "commonserver.redis.url.*$", replace: "commonserver.redis.url=http://rg-linkid.{{ APP_NAMESPACE }}.svc/linkid"}
      - {regexp: "kube-ruijie.svc", replace: "{{ APP_NAMESPACE }}.svc"}
    no_log: true

  - name: 准备部署文件目录
    tags:
      - config
    file: path={{ item }} state=directory
    with_items:
      - "{{ yaml_dir }}/convert"
    run_once: true
    connection: local

  - name: 准备部署文件
    tags:
      - config
    vars:
      deploy_conf: '{{ convert_deploy_conf }}'
    template: src='convert.yaml.j2' dest={{ yaml_dir }}/convert/convert.yml
    run_once: true
    connection: local

  - name: 获取所有已经创建的POD信息
    tags:
      - deploy
    command: "kubectl get pod -n {{ APP_NAMESPACE }}"
    register: pod_info
    run_once: true
    connection: local

  - name: 执行部署
    tags:
      - deploy
    shell: "kubectl apply -f {{ yaml_dir }}/convert/"
    when: 'pod_info.stdout is not search("rg-convert-[a-z0-9]*-[a-z0-9]*\s*[0-9]*/[0-9]*\s*Running")'
    run_once: true
    connection: local
