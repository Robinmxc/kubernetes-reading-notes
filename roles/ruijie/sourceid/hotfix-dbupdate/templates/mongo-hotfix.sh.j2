#!/bin/bash


cd /ruijie/init/sourceid-hotfix/sourceid-university/rg-upgrade-db/

##clean gate session
mongo -u {{ MONGODB_ADMIN_USER }}  -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/gate  --quiet --eval "db.getCollection('SESSIONS').remove({})"

end=0

versions=(R0.0 R1.0 R1.1 R1.2 R1.3 R1.4 R1.5 R1.6 R1.6.3 R1.6.4 R1.6.5 R1.7.0 R1.7.1 R1.7.2 R1.8.0 R1.8.0p1 R1.8.0p2 R1.9.0 R1.9.0p2 R1.9.1 R1.9.1p1 R2.0.0 R2.0.0p1 R2.0.1 R2.0.1p1 R2.0.2 R2.0.2p1 R2.0.3 R2.0.3p1 R2.0.4 R2.0.4p1 R2.1.0 R2.1.1 R2.1.1p1)

{% raw %}
for (( i = 0 ; i < ${#versions[@]} ; i++ ))
{% endraw %}
do
if [ ${versions[$i]} == DBVERSIONUPGRADE ]
then
        end=$i
fi
done

{% raw %}
for (( j = 0 ; j < $end+1 ; j++ ))
{% endraw %}
do


   {% for value in DB_VERSION %}

    if echo  {{current_db_version[DB_VERSION[value]["name"]+'_version']}}  | grep -q p; then

    if [    "${versions[$j]}" \> {{current_db_version[DB_VERSION[value]["name"]+'_version']}} ] || [ "${versions[$j]}" == {{current_db_version[DB_VERSION[value]["name"]+'_version']}} ]; then

     ./upgrade_data.sh 127.0.0.1 27017 {{value}}  sourceid  ${versions[$j]}  {{ MONGODB_ADMIN_USER }} {{ MONGODB_ADMIN_PWD }} admin {{ INDUSTRY_TYPE }}

    fi

    else

    if [    "${versions[$j]}" \> {{current_db_version[DB_VERSION[value]["name"]+'_version']}} ]; then

     ./upgrade_data.sh 127.0.0.1 27017 {{value}}  sourceid  ${versions[$j]}  {{ MONGODB_ADMIN_USER }} {{ MONGODB_ADMIN_PWD }} admin {{ INDUSTRY_TYPE }}

    fi



    fi

   {% endfor %}


done











dirname=(rg-upgrade-db rg-upgrade-db-{{ INDUSTRY_TYPE }})
for dir in ${dirname[@]};
do

cd /ruijie/init/sourceid-hotfix/sourceid-university/${dir}/

touch update.log

dbfilepath=$(ls -d *_upgrade_db/sourceid/DBVERSIONUPGRADE)


dbfilepathNew=(${dbfilepath//\\n/ })
{% raw %}
for((i=0;i<${#dbfilepathNew[*]};i++))
{% endraw %}
do
    errorinfo=$(grep "Error" update.log)

    if [[ ${errorinfo} =~ "Error" ]]
    then
        exit
    fi
    
    need=$(ls ${dbfilepathNew[i]}/ | grep js |wc -w)
    if [ "${need}" != "0" ] ; then

    dbfilepath1=$(ls ${dbfilepathNew[i]})
    dbfilepathNew1=(${dbfilepath1//\\n/ })
    {% raw %}
    for((j=0;j<${#dbfilepathNew1[*]};j++))
    {% endraw %}
    do

      #echo ${dbfilepathNew[i]}/${dbfilepathNew1[j]}
      cc=$(mongo  -u {{ MONGODB_ADMIN_USER }} -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/admin --quiet --eval "tabName='SYSTEM_VERSION';function getReadableFileSizeString(tabName) {var name=tabName;var cnt=db.getCollection(name).find({"FILE_NAME":'${dir}/${dbfilepathNew[i]}/${dbfilepathNew1[j]}'}).count();print(cnt);};getReadableFileSizeString(tabName);")  
      if [ $cc -gt 0 ]
      then
        echo "${dir}/${dbfilepathNew[i]}/${dbfilepathNew1[j]}记录已存在"
      else
        echo "${dir}/${dbfilepathNew[i]}/${dbfilepathNew1[j]}无记录"
        time=$(date +%F_%T.%3N)
        tt=$(mongo 127.0.0.1:27017 -u {{ MONGODB_ADMIN_USER }} -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin --quiet  ${dbfilepathNew[i]}/${dbfilepathNew1[j]})
        dd=$(echo $tt | sed 's/\"//g' | awk '{gsub(/^\s+|\s+$/, "");print}')
 
        errorinfo1=$(echo $dd | grep "Error")

        if [[ ${errorinfo1} =~ "Error" ]]
        then
            echo $dd >> update.log
            exit
        else
            mongo  -u {{ MONGODB_ADMIN_USER }}  -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/admin --quiet --eval "tabName='SYSTEM_VERSION';function getReadableFileSizeString(tabName) {var name=tabName;var cnt=db.getCollection(name).insert({"FILE_NAME": '${dir}/${dbfilepathNew[i]}/${dbfilepathNew1[j]}', "TIME": '${time}', "RESULT": '${dd}'});print(cnt);};getReadableFileSizeString(tabName);"
     
        fi

      fi
    done

    fi
    #need=$(ls ${dbfilepathNew[i]}/ | grep js |wc -w)
    #if [ "${need}" != "0" ] ; then
    #    mongo 127.0.0.1:27017 -u {{ MONGODB_ADMIN_USER }} -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin --quiet ${dbfilepathNew[i]}/*.js >> update.log 2>&1
    #fi




done

done

##clean gate session
mongo -u {{ MONGODB_ADMIN_USER }}  -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/gate  --quiet --eval "db.getCollection('SESSIONS').remove({})"
