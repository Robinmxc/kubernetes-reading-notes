#!/bin/bash






dirname=(rg-upgrade-db rg-upgrade-db-{{ INDUSTRY_TYPE }})
for dir in ${dirname[@]};
do

cd /ruijie/init/sourceid-hotfix/sourceid-university/${dir}/

touch updatedb.log


if [ -d  ./xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE ]; then


  errorinfo=$(grep "Error" updatedb.log)

  if [[ ${errorinfo} =~ "Error" ]]
  then
        exit
  fi


need=$(ls ./xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE/ | grep sql |wc -l)
if [ "${need}" != "0" ] ; then

dbfilepath1=$(ls ./xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE)
dbfilepathNew1=(${dbfilepath1//\\n/ })
{% raw %}
for((j=0;j<${#dbfilepathNew1[*]};j++))
{% endraw %}
do

cc=$(mongo  -u {{ MONGODB_ADMIN_USER }} -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/admin --quiet --eval "tabName='SYSTEM_VERSION';function getReadableFileSizeString(tabName) {var name=tabName;var cnt=db.getCollection(name).find({"FILE_NAME":'${dir}/xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}'}).count();print(cnt);};getReadableFileSizeString(tabName);")  
if [ $cc -gt 0 ]
then
   echo "${dir}/xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}记录已存在"
else
   echo "${dir}/xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}无记录"  

   time=$(date +%Y-%m-%d_%H:%M:%S)

   tt=$(psql -U postgres -d xxl_job -f  ./xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]})

   dd=$(echo $tt | sed 's/\"//g' | awk '{gsub(/^\s+|\s+$/, "");print}')

    errorinfo1=$(echo $dd | grep "Error")

    if [[ ${errorinfo1} =~ "Error" ]]
    then
            echo $dd >> updatedb.log
            exit
    else
            mongo  -u {{ MONGODB_ADMIN_USER }}  -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/admin --quiet --eval "tabName='SYSTEM_VERSION';function getReadableFileSizeString(tabName) {var name=tabName;var cnt=db.getCollection(name).insert({"FILE_NAME": '${dir}/xxl-job_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}', "TIME": '${time}', "RESULT": '${dd}'});print(cnt);};getReadableFileSizeString(tabName);"
     
    fi   


fi

done

fi

fi


if [ -d  ./rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE ]; then


  errorinfo=$(grep "Error" updatedb.log)

  if [[ ${errorinfo} =~ "Error" ]]
  then
        exit
  fi


need=$(ls ./rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE/ | grep sql |wc -l)
if [ "${need}" != "0" ] ; then

dbfilepath1=$(ls ./rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE)
dbfilepathNew1=(${dbfilepath1//\\n/ })
{% raw %}
for((j=0;j<${#dbfilepathNew1[*]};j++))
{% endraw %}
do

cc=$(mongo  -u {{ MONGODB_ADMIN_USER }} -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/admin --quiet --eval "tabName='SYSTEM_VERSION';function getReadableFileSizeString(tabName) {var name=tabName;var cnt=db.getCollection(name).find({"FILE_NAME":'${dir}/rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}'}).count();print(cnt);};getReadableFileSizeString(tabName);")  
if [ $cc -gt 0 ]
then
   echo "${dir}/rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}记录已存在"
else
   echo "${dir}/rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}无记录"  

   time=$(date +%Y-%m-%d_%H:%M:%S)

   tt=$(psql -U postgres -d flowable -f  ./rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]})

   dd=$(echo $tt | sed 's/\"//g' | awk '{gsub(/^\s+|\s+$/, "");print}')

    errorinfo1=$(echo $dd | grep "Error")

    if [[ ${errorinfo1} =~ "Error" ]]
    then
            echo $dd >> updatedb.log
            exit
    else
            mongo  -u {{ MONGODB_ADMIN_USER }}  -p {{ MONGODB_ADMIN_PWD }} --authenticationDatabase admin 127.0.0.1:27017/admin --quiet --eval "tabName='SYSTEM_VERSION';function getReadableFileSizeString(tabName) {var name=tabName;var cnt=db.getCollection(name).insert({"FILE_NAME": '${dir}/rg-flow_upgrade_db/sourceid/DBVERSIONUPGRADE/${dbfilepathNew1[j]}', "TIME": '${time}', "RESULT": '${dd}'});print(cnt);};getReadableFileSizeString(tabName);"
     
    fi   


fi

done

fi

fi






done