- name: 读取daemon.json
  command: "cat /etc/docker/daemon.json"
  register: daemon_json

- block:
  - name: 准备daemon.json
    replace:
      path: '/etc/docker/daemon.json'
      regexp: '^.*insecure-registries.*$'
      replace: '  "insecure-registries": ["{{ PRIVATE_INSECURE_REGISTRY }}"],'
  - name: 重新加载服务配置
    command: "systemctl daemon-reload"
  - name: 重启docker服务
    service: name=docker state=restarted
  - name: 登录docker仓库
    command: "docker login -u {{ PRIVATE_REGISTRY_USER }} -p {{ PRIVATE_REGISTRY_PWD }} {{ PRIVATE_INSECURE_REGISTRY }}"
  when: '"yes" == PRIVATE_REGISTRY_ENABLED and PRIVATE_INSECURE_REGISTRY not in daemon_json.stdout'
  
- name: 获取docker已加载的镜像信息
  command: "docker images --format ''{{ '{{' }}.Repository{{ '}}' }}:{{ '{{' }}.Tag{{ '}}' }}''"
  register: imgages_info

- name: Node清理历史不用的镜像文件
  vars:
    comp_name: "{{ item }}"
    docker_version: "{{ SOURCEID_DOCKERS[comp_name].version }}"
    img_id_ver: "{{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS[comp_name].name }}:{{ docker_version }}"
    img_file_name: "{{ comp_name }}-{{ docker_version }}.tar"
  shell: "cd {{ img_copy_dir }};for i in `ls {{ comp_name }}-[0-9]*.tar`;do reg='^{{ comp_name }}.*.tar$';if [ \"$i\" != {{ img_file_name }} ] && [[ \"$i\" =~ $reg ]];then  rm -rf $i;fi;done;"
  with_items: "{{ SOURCEID_DOCKERS.keys() }}"


- name: 复制镜像
  when: '"allinone" != DEPLOY_MODE'
  block:
  - name: 准备镜像复制目录
    file: path={{ item }} state=directory
    with_items:
    - "{{ img_copy_dir }}"

  - name: 获取已复制的镜像文件信息
    command: "ls {{ img_copy_dir}}"
    register: images_copy_info

  - name: 复制镜像文件
    vars:
      comp_name: "{{ item }}"
      docker_version: "{{ SOURCEID_DOCKERS[comp_name].version }}"
      img_id_ver: "{{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS[comp_name].name }}:{{ docker_version }}"
      img_file_name: "{{ comp_name }}-{{ docker_version }}.tar"
    copy: src={{ img_download_dir }}/{{ img_file_name }} dest={{ img_copy_dir }}/{{ img_file_name }}
    when: '"" != docker_version and img_file_name not in images_copy_info.stdout and img_id_ver not in imgages_info.stdout'
    with_items: "{{ SOURCEID_DOCKERS.keys() }}"

- name: 加载镜像
  vars:
    comp_name: "{{ item }}"
    docker_version: "{{ SOURCEID_DOCKERS[comp_name].version }}"
    img_id_ver: "{{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS[comp_name].name }}:{{ docker_version }}"
    img_file_name: "{{ comp_name }}-{{ docker_version }}.tar"
  command: 'docker load -i {{ img_dir }}/{{ img_file_name }}'
  when: '"" != docker_version and img_id_ver not in imgages_info.stdout and ( "gateway" != item or SOURCEID_GATEWAY_DEPLOY_MODE == "k8s" )'
  with_items: "{{ SOURCEID_DOCKERS.keys() }}"
