apiVersion: apps/v1
kind: Deployment
metadata:
  name: rg-{{ comp_name }}
  namespace: {{ APP_NAMESPACE }}
  labels:
    k8s-app: rg-{{ comp_name }}
spec:
  replicas: {{ deploy_conf.replicas }}
  selector:
    matchLabels:
      k8s-app: rg-{{ comp_name }}
  template:
    metadata:
      labels:
        k8s-app: rg-{{ comp_name }}
    spec:
      nodeName: {{ deploy_node_ip }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: rg-{{ comp_name }}
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS["freeradius"].name }}:{{ SOURCEID_DOCKERS["freeradius"].version }}
        imagePullPolicy: IfNotPresent
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 1812
          protocol: UDP
        - containerPort: 1813
          protocol: UDP
        env:
        - name: AUTHEXTEND_PROXY_PORT
          value: "8888"
        - name: ESS_PROXY_PORT
          value: "8080"
        - name: CURRENT_NODE_IP
          value: {{ deploy_node_ip }}
        - name: ESS_NODE_IP
          value: {{ deploy_node_ip }}
        volumeMounts:
         - mountPath: /usr/local/var/log/radius
           name: log
{%if HEALTH_CHECK["enable"] and (HEALTH_CHECK["freeradius"] is not defined or HEALTH_CHECK["freeradius"])  %}
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 5
{% endif %}
      imagePullSecrets:
      - name: regsecret
      volumes:
        - name: log
          hostPath:
            path: {{ config_base_dir }}/logs/rg-freeradius/log

---
apiVersion: v1
kind: Service
metadata:
  name: rg-{{comp_name}}
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: rg-{{comp_name}}
  ports:
  - protocol: UDP
    port: 1812
    name: port1812
    targetPort: 1812
  - protocol: UDP
    port: 1813
    name: port1813
    targetPort: 1813
