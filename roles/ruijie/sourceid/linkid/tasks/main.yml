- name: 复制配置文件
  tags:
    - config
  copy:
    src: "{{ namespace_dir }}/conf/sourceid/linkid/conf/"
    dest: "{{ config_base_dir }}/sourceid/linkid/conf/"

- name: 设置参数
  tags:
    - config
  set_fact:
    etcd_address: |-
       [
         {% for host in groups['etcd'] -%}          
           "https://{{ host }}:2379",
         {% endfor -%}
       ]

- name: 自动配置
  tags:
    - config
  replace: path="{{ config_base_dir }}/sourceid/linkid/conf/application-bus.properties" regexp="{{ item.regexp }}" replace="{{ item.replace }}"
  with_items:
    - {regexp: "mongodb:.*/linkid-dev.*$", replace: "mongodb://{{ SOURCEID_LINKID_DB_USER }}:{{ SOURCEID_LINKID_DB_PWD }}@{{ mongodb_addr }}/linkid-dev?replicaSet=rs0"}
    - {regexp: "kube-ruijie.svc", replace: "{{ APP_NAMESPACE }}.svc"}
    - {regexp: "^lincese.check=.*$", replace: "lincese.check={{ linkid_license_check }}"}
    - {regexp: "^lincese.url=.*$", replace: "lincese.url=http://rg-license.{{ APP_NAMESPACE }}.svc/license/check/"}
    - {regexp: "/ruijie/sourceid/linkid/conf", replace: "{{ config_base_dir }}/sourceid/linkid/etcdtls"}
    - {regexp: "sid.lock.etcd.endpoints.*$", replace: "sid.lock.etcd.endpoints = {{ etcd_address | join(',') }}"}
    - {regexp: "^linkid.self.url=.*$", replace: "linkid.self.url = {{ SOURCEID_FRONTEND_URL }}"}
    - {regexp: "^cas.server.name=.*$", replace: "cas.server.name = {{ SOURCEID_SSO_URL }}"}
  no_log: true

- name: 自定义配置
  tags:
    - config
  replace:
    path: '{{ config_base_dir }}/sourceid/linkid/conf/application-bus.properties'
    regexp: '{% if item.regexp is defined %}{{item.regexp}}{% else %}{{ item.name }}\s*=.*${% endif %}'
    replace: '{% if item.regexp is defined %}{{item.value}}{% else %}{{ item.name }}={{item.value}}{% endif %}'
  with_items: '{{ linkid_configs }}'
  no_log: true

- name: 准备部署文件目录
  tags:
    - config
  file: path={{ item }} state=directory
  with_items:
    - "{{ yaml_dir }}/linkid"
  run_once: true
  connection: local

- name: 准备部署文件
  tags:
    - config
  vars:
    deploy_conf: '{{ linkid_deploy_conf }}'
  template: src='{{ linkid_templates_path }}linkid.yaml.j2' dest={{ yaml_dir }}/linkid/linkid.yml
  run_once: true
  connection: local

- name: 获取所有已经创建的POD信息
  tags:
    - deploy
  command: "{{ bin_dir }}/kubectl get pod -n {{ APP_NAMESPACE }}"
  register: pod_info
  run_once: true
  connection: local

- name: 执行部署
  tags:
    - deploy
  shell: "{{ bin_dir }}/kubectl apply -f {{ yaml_dir }}/linkid/"
  run_once: true
  connection: local
