apiVersion: apps/v1
kind: Deployment
metadata:
  name: rg-mdm
  namespace: {{ APP_NAMESPACE }}
  labels:
    k8s-app: rg-mdm
spec:
  replicas: {{ deploy_conf.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      k8s-app: rg-mdm
  template:
    metadata:
      labels:
        k8s-app: rg-mdm
    spec:
{%if SKYWALKING["enable"] %}
      initContainers:
      - name: init-agent
        image: {{ PRIVATE_INSECURE_REGISTRY }}/sourceid/skywalking:{{ SKYWALKING.IMAGE_VERSION }}
        command:
        - 'sh'
        - '-c'
        - 'set -ex;mkdir -p /skywalking/agent;cp -r /opt/skywalking/agent/* /skywalking/agent;'
        volumeMounts:
        - name: agent
          mountPath: /skywalking/agent
{% endif %}
      shareProcessNamespace: true
      containers:
      - name: rg-mdm
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS.mdm.name }}:{{ SOURCEID_DOCKERS.mdm.version }}
        imagePullPolicy: IfNotPresent
        env:
{%if SKYWALKING["enable"] %}
        - name: JAVA_AGENT_EXT
          value: {{ SKYWALKING.JAVA_AGENT_EXT }}
        - name: SW_AGENT_NAME
          value: {{ SKYWALKING.AGENT_PREFIX }}-mdm
        - name: SW_AGENT_NAMESPACE
          value: {{ SKYWALKING.NAMESPACE }}
        - name: SW_GRPC_LOG_SERVER_HOST
          value: {{ SKYWALKING.SERVER_HOST }}
        - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
          value: {{ SKYWALKING.SERVER_HOST }}:11800          
{% endif %}
        - name: JAVA_OPT_EXT
          value: "{{ mdm_java_opt }}"
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 8910
        volumeMounts:
        - mountPath: /ruijie/sourceid/mdm/conf
          name: mdmconf
        - mountPath: /ruijie/sourceid/data
          name: data
        - mountPath: /logs
          name: logpath
        - mountPath: /skywalking/agent
          name: agent

{%if HEALTH_CHECK["enable"] and (HEALTH_CHECK["mdm"] is not defined or HEALTH_CHECK["mdm"]) %}
        startupProbe:
          failureThreshold: 20
          httpGet:
            path: /mdm/liveProbe
            port: 8910
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1

        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /mdm/liveProbe
            port: 8910
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1

        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /mdm/liveProbe
            port: 8910
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
{% endif %}
{% if DOP_ENABLE == "yes" %}
      - name: rg-dop
        image: {{ PRIVATE_INSECURE_REGISTRY }}/{{ SOURCEID_DOCKERS.dop.name }}:{{ SOURCEID_DOCKERS.dop.version }}
        imagePullPolicy: IfNotPresent
        env:
{%if SKYWALKING["enable"] %}
        - name: JAVA_AGENT_EXT
          value: {{ SKYWALKING.JAVA_AGENT_EXT }}
        - name: SW_AGENT_NAME
          value: {{ SKYWALKING.AGENT_PREFIX }}-dop
        - name: SW_AGENT_NAMESPACE
          value: {{ SKYWALKING.NAMESPACE }}
        - name: SW_GRPC_LOG_SERVER_HOST
          value: {{ SKYWALKING.SERVER_HOST }}
        - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
          value: {{ SKYWALKING.SERVER_HOST }}:11800
{% endif %}
        - name: JAVA_OPT_EXT
          value: "{{ dop_java_opt }}"
{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ dop_mdm_deploy_conf.resources.limits.cpu }}
            memory: {{ dop_mdm_deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ dop_mdm_deploy_conf.resources.requests.cpu }}
            memory: {{ dop_mdm_deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 8920
        volumeMounts:
        - mountPath: /ruijie/sourceid/dop/conf
          name: dopconf
        - mountPath: /ruijie/sourceid/data
          name: data
        - mountPath: /logs
          name: logpath
        - mountPath: /skywalking/agent
          name: agent
{%if HEALTH_CHECK["enable"] and (HEALTH_CHECK["dop"] is not defined or HEALTH_CHECK["dop"])  %}
        startupProbe:
          failureThreshold: 20
          httpGet:
            path: /dop/liveProbe
            port: 8920
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /dop/liveProbe
            port: 8920
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /dop/liveProbe
            port: 8920
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
{% endif %}
{% endif %}

      imagePullSecrets:
      - name: regsecret
      volumes:
        - name: mdmconf
          hostPath:
            path: {{ config_base_dir }}/sourceid/mdm/conf
        - name: dopconf
          hostPath:
            path: {{ config_base_dir }}/sourceid/dop/conf
        - name: data
          hostPath:
            path: {{ config_base_dir }}/sourceid/data
        - name: logpath
          hostPath:
            path: {{ config_base_dir }}/logs
        - name: agent
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: rg-mdm
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: rg-mdm
  ports:
  - port: 80
    targetPort: 8910

{% if DOP_ENABLE == "yes" %}
---
apiVersion: v1
kind: Service
metadata:
  name: rg-dop
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: rg-mdm
  ports:
  - port: 80
    targetPort: 8920
{% endif %}
