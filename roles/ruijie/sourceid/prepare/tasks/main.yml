- name: 准备目录
  file: path={{ item }} state=directory
  with_items:
  - "{{ workspace_dir }}/bin"
  - "{{ workspace_dir }}/conf"
  - "{{ workspace_dir }}/yaml"
  run_once: true
  connection: local

- name: 获取namespace是否存在
  command: "{{ bin_dir }}/kubectl get namespaces"
  register: namespaces_info
  run_once: true
  connection: local

- name: 创建namespace
  shell: "{{ bin_dir }}/kubectl create namespace {{ APP_NAMESPACE }}"
  when: 'APP_NAMESPACE not in namespaces_info.stdout'
  run_once: true
  connection: local

- name: 获取regsecret是否存在
  command: "{{ bin_dir }}/kubectl get secret -n {{ APP_NAMESPACE }}"
  register: secret_info
  run_once: true
  connection: local

- name: 创建regsecret
  shell: "{{ bin_dir }}/kubectl create secret docker-registry regsecret --docker-server={{ PRIVATE_INSECURE_REGISTRY }} --docker-username={{ PRIVATE_REGISTRY_USER }} --docker-password={{ PRIVATE_REGISTRY_PWD }} --namespace={{ APP_NAMESPACE }}"
  when: '"regsecret" not in secret_info.stdout'
  run_once: true
  connection: local

- name: 拷贝SourceID配置文件
  vars:
    src_path: "{{ sourceid_kad_dir }}/conf/{{ item }}"
    dest_path: "{{ workspace_dir }}/conf/{{ item }}"
  copy: src="{{ src_path }}/" dest="{{ dest_path }}/"
  when: 'dest_path is not exists'
  run_once: true
  connection: local
  with_items:
    - "sourceid/sso"
    - "sourceid/gate"
    - "sourceid/linkid"
    - "sourceid/frontend"
    - "component"
