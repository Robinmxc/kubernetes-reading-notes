apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    matchLabels:
      k8s-app: postgresql
  serviceName: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: postgresql
    spec:
      nodeName: {{ pgsql_node_ip }}
      hostNetwork: true
      hostAliases:
{% for host in groups['pgsql'] %}
      - ip: "{{ host }}"
        hostnames:
        - "{{ hostvars[host]['PG_NODE_NAME'] }}"
{% endfor %}
      containers:
      - name: postgresql
        image: postgres:13.6
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: {{ PGSQL_ADMIN_PWD }}
        - name: POSTGRES_DB
          value: master

{% if "dict" == (deploy_conf.resources | type_debug) %}
        resources:
          limits:
            cpu: {{ deploy_conf.resources.limits.cpu }}
            memory: {{ deploy_conf.resources.limits.memory }}
          requests:
            cpu: {{ deploy_conf.resources.requests.cpu }}
            memory: {{ deploy_conf.resources.requests.memory }}
{% endif %}
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /bitnami/postgresql
          name: postgresql-data
        - mountPath: /ruijie/init
          name: postgresql-init
      imagePullSecrets:
      - name: regsecret
      volumes:
        - name: postgresql-data
          hostPath:
            path: {{ pgsql_data_dir }}
        - name: postgresql-init
          hostPath:
            path: {{ pgsql_init_dir }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: {{ APP_NAMESPACE }}
spec:
  selector:
    k8s-app: postgresql
  ports:
  - port: 5432
    targetPort: 5432
