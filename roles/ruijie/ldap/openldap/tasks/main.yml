- name: 检查ldap的服务状态
  stat: 
    path: /usr/lib/systemd/system/slapd.service    #这个服务状态不能用shell命令吗system status slapd
  register: slapd_stat

- name: 部署slapd
  when: 'not slapd_stat.stat.exists'
  block:
  - name: 准备目录
    file: name={{ item }} state=directory
    with_items:
    - "{{ DATA_DIR }}/slapd"

  - name: 解压 slapd 安装包
    shell: "tar -zxvf {{ DEST_FILE_PATH }}/{{ ldap_file }} -C {{ DATA_DIR }}/slapd >/dev/null"

  - name: 安装slapd
    shell: "yum install -y {{ DATA_DIR }}/slapd/*rpm"
    no_log: true
    ignore_errors: true

  - name: 准备配置文件
    tags:
      - config
    template: src='DB_CONFIG.j2' dest=/var/lib/ldap/DB_CONFIG

  - name: 安装slapd
    shell: "chown ldap. /var/lib/ldap/DB_CONFIG"


- name: 开机启用 slapd 服务
  tags:
    - config
  shell: systemctl enable slapd.service
  ignore_errors: true

- name: 修改slapd端口
  shell: mv slapd slapd.bak # 先将原有的slapd配置文件改一下名字。
  template: src='slapd.j2' dest=/etc/sysconfig/slapd

- name: 开启 slapd 服务
  tags:
    - config
  shell: systemctl daemon-reload && systemctl restart slapd.service

- name: 等待 slapd 启动完成
  shell: "systemctl status slapd.service|grep Active"
  register: slapd_status
  until: '"running" in slapd_status.stdout'
  retries: 8
  delay: 2


- name: 生成 slapd 密码
  shell: "slappasswd -s {{ LDAP.LDAP_ADMIN_PWD }}"
  register: slapd_pwd_status

- name: 准备配置文件
  tags:
    - config
  vars:
    ldappasswd: '{{ slapd_pwd_status.stdout }}'
  template: src='chrootpw.ldif.j2' dest=/etc/openldap/chrootpw.ldif
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif # 执行生效命令

- name: 导入基本的Schema模式 # TODO 执行多条shell
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif && ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif && ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif

- name: 导入基础域名
  vars:
    ldappasswd: '{{ slapd_pwd_status.stdout }}'
  template: src='chdomain.ldif.j2' dest=/etc/openldap/chdomain.ldif
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif

- name: name.ldif文件
  template: src='name.ldif.j2' dest=/etc/openldap/name.ldif
  shell: ldapadd -x -D "cn=admin,dc=gongchang,dc=com" -W -f name.ldif

- name: 密码策略配置
  shell: 'ldapadd -Y EXTERNAL -H ldapi:/// -D "cn=config" -f /etc/openldap/schema/ppolicy.ldif'
  register: ppolicy_status
  until: '"ppolicy" in ppolicy_status.stdout'

- name: 加载ppolicy模块
  shell: 'ldapsearch -Y EXTERNAL -H ldapi:/// -b "cn=module{0},cn=config"'
  register: ppolicy_add_status

- name: 判断执行步骤一
  template: src='add_ppolicy.ldif.j2' dest=/etc/openldap/add_ppolicy.ldif
  when: '"no such objec" in ppolicy_add_status.stdout'
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f add_ppolicy.ldif

- name: 判断执行步骤二  判断不在返回结果里面是否用 not in？
  template: src='modify_ppolicy.ldif.j2' dest=/etc/openldap/modify_ppolicy.ldif
  when: '"no such objec" not in ppolicy_add_status.stdout'
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f modify_ppolicy.ldif

- name: 指定默认策略dn名
  template: src='ppolicy_overlay.ldif.j2' dest=/etc/openldap/ppolicy_overlay.ldif
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f defaultppolicy.ldif

- name: 禁止匿名访问
  template: src='disable_anon.ldif.j2' dest=/root/disable_anon.ldif
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f disable_anon.ldif

- name: 添加只读账号
  template: src='olcAccess.ldif.j2' dest=/etc/openldap/olcAccess.ldif
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f olcAccess.ldif

- name: 设置定时清理Berkeley DB Logs # TODO  这个地方执行多行shell命令
  shell: touch /var/spool/cron/root
    | sed -i '/db_checkpoint/d' /var/spool/cron/root
    | echo '0 0 3 * * db_checkpoint -1 -h /var/lib/ldap' >> /var/spool/cron/root
    | sed -i '/db_archive/d' /var/spool/cron/root
    | echo '0 0 3 * * db_archive -d -h /var/lib/ldap' >> /var/spool/cron/root

- name: 配置双主，两台服务第一个相同的配置文件
  template: src='mod_syncprov.ldif.j2' dest=/etc/openldap/mod_syncprov.ldif
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f mod_syncprov.ldif

- name: 两台服务器第二个相同的配置文件
  template: src='syncprov.ldif.j2' dest=/etc/openldap/syncprov.ldif
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f syncprov.ldif
  # TODO
- name: 两个机器都要执行，但是有两个参数不一样
  #如何判断不同的服务器设置不同的参数
  #olcServerID：配置文件中的服务id不能相同
  #provider：配置文件中指向对方的服务器ip地址
  vars:
    olcServerID:
    provider:
  template: src='master_node.ldif.j2' dest=/etc/openldap/master_node.ldif
  #两台服务器都要执行生效命令。

