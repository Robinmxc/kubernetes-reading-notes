# WARNING: This playbook will erase the entire k8s-cluster, include PODs, ETCD data etc.
# Make sure you know what you are doing.

# to clean 'kube_node' nodes
- hosts:
  - kube_master
  - kube_node
  tasks:
  - name: stop and disable kube_node service
    service: name={{ item }} state=stopped enabled=no
    with_items:
    - kubelet
    ignore_errors: true

  - name: reset kubeadm
    shell: 'kubeadm reset -f'

  - name: remove files and dirs of 'kube_node' nodes
    file: name={{ item }} state=absent
    with_items:
    - "/var/lib/kubelet/"
    - "/usr/lib/systemd/system/kubelet.service"

  - name: cleanup iptables
    shell: "iptables -F && iptables -X \
	&& iptables -F -t nat && iptables -X -t nat \
	&& iptables -F -t raw && iptables -X -t raw \
	&& iptables -F -t mangle && iptables -X -t mangle"
    when: "'kubeasz' not in install_info.stdout"

  - name: 查询网卡信息
    shell: "ip link | grep mtu"
    register: ip_link_info

  - name: cleanup networks1
    shell: "ip link del {{ item }}"
    when: 'item in ip_link_info.stdout'
    with_items:
      - "tunl0"
      - "flannel.1"
      - "cni0"
      - "mynet0"
      - "kube-bridge"
      - "dummy0"
      - "cilium_net"
      - "cilium_vxlan"
    ignore_errors: true

  - name: cleanup 'calico' routes
    shell: "for rt in `ip route|grep bird|sed 's/blackhole//'|awk '{print $1}'`;do ip route del $rt;done;"
    when: "CLUSTER_NETWORK == 'calico'"
    ignore_errors: true

# to clean 'lb' nodes
- hosts:
  - lb
  - ex-lb
  tasks:
  - name: stop keepalived service
    shell: systemctl disable keepalived && systemctl stop keepalived
    ignore_errors: true

  - name: stop haproxy service
    shell: systemctl disable haproxy && systemctl stop haproxy
    ignore_errors: true

  - name: remove files and dirs
    file: name={{ item }} state=absent
    with_items:
    - "/etc/haproxy"
    - "/etc/keepalived"

# to clean ntp, certs and keys, env path
- hosts:
  - kube_master
  - kube_node
  - deploy
  - etcd
  - lb
  tasks:
  - name: stop and disable chrony in Ubuntu
    service: name=chrony state=stopped enabled=no
    ignore_errors: true
    tags: rm_ntp 
    when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

  - name: 查询chronyd状态
    shell: "systemctl list-units *.service"
    register: svc_info
    when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "Anolis" or ansible_distribution == "openEuler"

  - name: stop and disable chronyd in CentOS/RedHat/Anolis/openEuler
    service: name=chronyd state=stopped enabled=no
    tags: rm_ntp
    when: '"chronyd" in svc_info.stdout'
    ignore_errors: true

  - name: clean certs and keys
    file: name={{ item }} state=absent
    with_items:
    - "/etc/kubernetes/"
    - "{{ ca_dir }}" 
    - "/root/.kube/config"

  - name: clean 'ENV PATH'
    lineinfile:
      dest: ~/.bashrc
      state: absent
      regexp: '{{ item }}'
    with_items:
    - 'kubeasz'
    - 'helm'
    - 'kubectl completion'
    - 'HELM_TLS_ENABLE'
